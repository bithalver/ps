%!PS-Adobe-3.0
%%DocumentData: Clean7Bit
%%EndComments

my_init

/h 3 90 basicplane def
/d << >> def
% /d <</cb_type (border)>> def
/threads 20 def

/style 0 def

/alllevel 1 def % Ha 0, csak a legmelyebb szint latszik.
                % Ha 1, mind.
                % Ha 2, a lista az alllevels-ben van.(A 0 a legmelyebb szint !)
/alllevels [0 1] def

/c15 { % p1 p2 p3 -> array % Calculates the main 15 points
[/p1 /p2 /p3] params
  
  /p12 p1 p2 pointhalve def
  /p23 p2 p3 pointhalve def
  /p31 p3 p1 pointhalve def
  /p112 p1 p12 pointhalve def
  /p122 p12 p2 pointhalve def
  /p223 p2 p23 pointhalve def
  /p233 p23 p3 pointhalve def
  /p331 p3 p31 pointhalve def
  /p311 p31 p1 pointhalve def
  /p123 p1 p23 pointhalve def
  /p231 p2 p31 pointhalve def
  /p312 p3 p12 pointhalve def

  [p1 p2 p3 p12 p23 p31 p112 p122 p223 p233 p331 p311 p123 p231 p312]
end } def


/r3 {
   [/p1 /p2 /p3 /pattern /depth] params
%  /depth exch def /pattern exch def /p3 exch def /p2 exch def /p1 exch def
  0 depth eq 
  alllevel 1 eq or 
  2 alllevel eq  depth alllevels member and or {
    p3 p1 p2 d pdadd
  } if
  depth 1 ge {

    /p1o p1 p2 p3 pointmirror def
    /p2o p2 p3 p1 pointmirror def
    /p3o p3 p1 p2 pointmirror def

    /ips p1  p2  p3  c15 
         p1o p3  p2  c15 arrayadd
         p3  p2o p1  c15 arrayadd
         p2  p1  p3o c15 arrayadd def

    1 1 pattern length { /i exch def

      /pi pattern i nth def  pi aload pop /pi2 exch def /pi1 exch def

      pi1 10 mod 01 eq {[  1  4  6]} if
      pi1 10 mod 02 eq {[  2  5  4]} if
      pi1 10 mod 03 eq {[  3  6  5]} if
      pi1 10 mod 04 eq {[  5  6  4]} if
      pi1 10 mod 05 eq {[ 13  9 10]} if
      pi1 10 mod 06 eq {[ 14 11 12]} if
      pi1 10 mod 07 eq {[ 15  7  8]} if

      /pi2f pi2 4 ge pi2 6 le and def
      pi2 2 eq pi2 5 eq or { [ exch aload pop 3 1 roll ] } if
      pi2 3 eq pi2 6 eq or { [ exch aload pop 3 2 roll ] } if

      pi2f { [ exch aload pop 2 1 roll ] } if

      /pi 0 def
      pi1 10 ge pi1 19 le and {/pi 15 def} if
      pi1 20 ge pi1 29 le and {/pi 30 def} if
      pi1 30 ge pi1 39 le and {/pi 45 def} if

      pi 0 gt {
        [ exch aload pop  pi add 3 1 roll pi add 3 1 roll pi add 3 1 roll ]
      } if 
      % dup ==
      ips exch nthpoints pattern depth 1 sub r3

    } for
  } if
  allnets
  end
  /allnets exch def
} def

%         1
%        7 12
%      4 13  6
%     8 14 15 11
%   2  9  5 10  3

%
%
%     3X  0X  2X
%         1X

%%Page: "K1" K1
clearallnets 
h [1 2 3] nthpoints [ [21 1] [31 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "K1" K1

%%Page: "K2" K2
clearallnets 
h [1 2 3] nthpoints [ [01 1] [11 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "K2" K2

%%Page: "K3" K3
clearallnets 
h [1 2 3] nthpoints [ [04 1] [14 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "K3" K3

%%Page: "Base1" Base1
clearallnets 
h [1 2 3] nthpoints [ [01 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "Base1" Base1

%%Page: "Base2" Base2
clearallnets 
h [1 2 3] nthpoints [ [02 2] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "Base2" Base2

%%Page: "M2" M2
clearallnets 
h [1 2 3] nthpoints [ [02 5] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "M2" M2

%%Page: "Base3" Base3
clearallnets 
h [1 2 3] nthpoints [ [03 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "Base3" Base3

%%Page: "M3" M3
clearallnets 
h [1 2 3] nthpoints [ [03 4] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "M3" M3

%%Page: "Base4" Base4
clearallnets 
h [1 2 3] nthpoints [ [04 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "Base4" Base4

%%Page: "D1_1" D1_1
clearallnets 
h [1 2 3] nthpoints [ [01 3] [03 2] [04 1] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "D1_1" D1_1

%%Page: "D1_2" D1_2
clearallnets 
h [1 2 3] nthpoints [ [01 3] [03 2] [04 1] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "D1_2" D1_2

%%Page: "D1_3" D1_3
clearallnets 
h [1 2 3] nthpoints [ [01 3] [03 2] [04 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "D1_3" D1_3

%%Page: "D1_4" D1_4
clearallnets 
h [1 2 3] nthpoints [ [01 3] [03 2] [04 1] ] 4 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "D1_4" D1_4

%%Page: "A1" A1
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "A1" A1

%%Page: "B1_1" B1_1
/threads 20 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [04 1] [04 2] [04 3] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B1_1" B1_1

%%Page: "B1_2" B1_2
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [04 1] [04 2] [04 3] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B1_2" B1_2

%%Page: "B1_3" B1_3
/threads 5 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [04 1] [04 2] [04 3] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B1_3" B1_3

%%Page: "A2_1" A2_1
/threads 20 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [05 2] [06 2] [07 2] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "A2_1" A2_1

%%Page: "A2_2" A2_2
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [05 2] [06 2] [07 2] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "A2_2" A2_2

%%Page: "A2_3" A2_3
/threads 5 def
clearallnets 
h [1 2 3] nthpoints [ [01 1] [02 1] [03 1] [05 2] [06 2] [07 2] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "A2_3" A2_3

%%Page: "B2_1" B2_1
/threads 20 def
clearallnets 
h [1 2 3] nthpoints [ [05 2] [06 2] [07 2] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B2_1" B2_1

%%Page: "B2_2" B2_2
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [05 2] [06 2] [07 2] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B2_2" B2_2

%%Page: "B2_3" B2_3
/threads 5 def
clearallnets 
h [1 2 3] nthpoints [ [05 2] [06 2] [07 2] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "B2_3" B2_3

%%Page: "C1_4" C1_4
/threads 5 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] ] 4 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C1_4" C1_4

%%Page: "C2_1" C2_1
/threads 20 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C2_1" C2_1

%%Page: "C2_2" C2_2
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C2_2" C2_2

%%Page: "C2_3" C2_3
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C2_3" C2_3

%%Page: "C2_4" C2_4
/threads 5 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] ] 4 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C2_4" C2_4

%%Page: "C3_1" C3_1
/threads 20 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] [04 2] [04 3] ] 1 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C3_1" C3_1

%%Page: "C3_2" C3_2
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] [04 2] [04 3] ] 2 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C3_2" C3_2

%%Page: "C3_3" C3_3
/threads 10 def
clearallnets 
h [1 2 3] nthpoints [ [01 2] [02 2] [03 2] [04 1] [04 2] [04 3] ] 3 r3
gsave fitto1page drawallnets showpage grestore
%%EndPage: "C3_3" C3_3
